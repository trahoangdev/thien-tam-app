name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend_thien_tam_app/package-lock.json
      
      - name: Install dependencies
        working-directory: backend_thien_tam_app
        run: npm ci
      
      - name: Run linting
        working-directory: backend_thien_tam_app
        run: npm run lint || true
      
      - name: Build project
        working-directory: backend_thien_tam_app
        run: npm run build
      
      - name: Run tests
        working-directory: backend_thien_tam_app
        run: npm test || echo "No tests configured yet"
        env:
          NODE_ENV: test
          MONGO_URI: mongodb://localhost:27017/thientam-test

  # Frontend Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.9.0'
          channel: 'stable'
      
      - name: Get dependencies
        working-directory: thien_tam_app
        run: flutter pub get
      
      - name: Analyze code
        working-directory: thien_tam_app
        run: flutter analyze
      
      - name: Run tests
        working-directory: thien_tam_app
        run: flutter test || echo "No tests configured yet"
      
      - name: Build APK
        working-directory: thien_tam_app
        run: flutter build apk --release --no-tree-shake-icons
        continue-on-error: true

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run npm audit
        working-directory: backend_thien_tam_app
        run: npm audit --audit-level=moderate || true
      
      - name: Run dart pub outdated
        working-directory: thien_tam_app
        run: flutter pub outdated || true

  # Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying to staging environment..."
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
      
      # Add your staging deployment steps here
      # For example: Railway, Render, or VPS deployment

  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://api.thientam.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy notification
        run: |
          echo "ðŸŽ‰ Deploying to production environment..."
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
      
      # Add your production deployment steps here
      # For example: Railway, Render, or VPS deployment
      
      - name: Health check
        run: |
          sleep 30  # Wait for deployment to complete
          curl -f https://api.thientam.app/healthz || exit 1

